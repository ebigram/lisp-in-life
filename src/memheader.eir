# Registers
.data
QFTASM_PC:
	.long 0
QFTASM_STDIN:
	.long 0
QFTASM_STDOUT:
	.long 0
QFTASM_A:
	.long 0
QFTASM_B:
	.long 0
QFTASM_C:
	.long 0
QFTASM_D:
	.long 0
QFTASM_BP:
	.long 0
QFTASM_SP:
	.long 0
QFTASM_TEMP:
	.long 0
QFTASM_TEMP_2:
	.long 0

# Special form strings
lambda_str:
	.string "lambda"
print_str:
	.string "print"
define_str:
	.string "define"
quote_str:
	.string "quote"
list_str:
	.string "list"
if_str:
	.string "if"
car_str:
	.string "car"
while_str:
	.string "while"
progn_str:
	.string "progn"
macro_str:
	.string "macro"
lambdaast_str:
	.string "lambda*"
eq_str:
	.string "eq"
cons_str:
	.string "cons"
plus_str:
	.string "+"
t_str:
	.string "t"
mod_str:
	.string "mod"
eval_str:
	.string "eval"
cdr_str:
	.string "cdr"
minus_str:
	.string "-"
ast_str:
	.string "*"
lt_str:
	.string "<"
gt_str:
	.string ">"
slash_str:
	.string "/"

# evalhash is defined with a negative offset here, to compensate for the offset in the jump hash calculation
# atom_str:
evalhash:
	.string "atom"

# The actual evalhash table starts here.
# Unused regions are allocated as global variables
    .long eval_createlambda
# i: # extern
    .long 0
# q: # extern
    .long 0
# r: # extern
    .long 0
    .long eval_print
# j: # extern
    .long 0
# k: # extern
    .long 0
    .long eval_define
# _malloc_bytes: # extern
    .long 0
# _malloc_result: # extern
    .long 0
    .long eval_quote
# _str: # extern
    .long 0
# charbuf: # extern
    .long 0
    .long eval_list
# c: # extern
    .long 0
# s1: # extern
    .long 0
    .long eval_if
    .long eval_car
# s2: # extern
    .long 0
    .long eval_while
# s3: # extern
    .long 0
# stringTableHead: # extern
    .long 254
    .long eval_progn
# _stringtable: # extern
    .long 526
# _lambda: # extern
    .long 0
    .long eval_createlambda
# _env: # extern
    .long 0
# _env2: # extern
    .long 529
    .long eval_createlambda
# _env3: # extern
    .long 0
# _evalenv: # extern
    .long 529
# nil: #146 # extern
    .long 248
    .long eval_eq
# true_value: # extern
    .long 250
    .long eval_cons
# _value: # extern
    .long 0
    .long eval_arith
# _list: # extern
    .long 248
    .long eval_arith
# initlist: # extern
    .long 248
    .long eval_eval
# curlist: # extern
    .long 248
# sthash: # extern
    .long 1
    .long eval_cdr
# stringtable: # extern
    .long 0
    .long eval_arith
    .long eval_arith
    .long eval_cmp
    .long eval_cmp
    .long eval_arith
    .long eval_atom

#========================================
# Values
#========================================
lambda_value:
    .long 1
    .long lambda_str
print_value:
    .long 1
    .long print_str
define_value:
    .long 1
    .long define_str
quote_value:
    .long 1
    .long quote_str
list_value:
    .long 1
    .long list_str
if_value:
    .long 1
    .long if_str
car_value:
    .long 1
    .long car_str
while_value:
    .long 1
    .long while_str
progn_value:
    .long 1
    .long progn_str
macro_value:
    .long 1
    .long macro_str
lambdaast_value:
    .long 1
    .long lambdaast_str
eq_value:
    .long 1
    .long eq_str
cons_value:
    .long 1
    .long cons_str
plus_value:
    .long 1
    .long plus_str
true_value:
    .long 1
    .long t_str
mod_value:
    .long 1
    .long mod_str
eval_value:
    .long 1
    .long eval_str
cdr_value:
    .long 1
    .long cdr_str
minus_value:
    .long 1
    .long minus_str
ast_value:
    .long 1
    .long ast_str
lt_value:
    .long 1
    .long lt_str
gt_value:
    .long 1
    .long gt_str
slash_value:
    .long 1
    .long slash_str

#========================================
# Stringtables
#========================================
# Hashtable contents:
# (0, ['mod'])
# (1, ['atom', 'lambda'])
# (2, ['macro'])
# (3, ['cons'])
# (4, ['t'])
# (6, ['car', 'eq', 'progn'])
# (8, ['eval'])
# (9, ['cdr', 'while'])
# (10, ['*'])
# (11, ['+', 'define', 'lambda*'])
# (12, ['<', 'list'])
# (13, ['-', 'print'])
# (14, ['>', 'quote'])
# (15, ['/', 'if'])

stringTableHeadList:
    .long stringtable_mod
    .long stringtable_lambda
    .long stringtable_macro
    .long stringtable_cons
    .long stringtable_t
    .long 0
    .long stringtable_eq
    .long 0
    .long stringtable_eval
    .long stringtable_cdr
    .long stringtable_ast
    .long stringtable_define
    .long stringtable_list
    .long stringtable_print
    .long stringtable_quote
    .long stringtable_if

stringtable_mod:
    .long mod_value
    .long 0
    .long 0
stringtable_lambda:
    .long lambda_value
    .long stringtable_atom
    .long 0
stringtable_atom:
    .long evalhash
    .long 0
    .long 0
stringtable_macro:
    .long macro_value
    .long 0
    .long 0
stringtable_cons:
    .long cons_value
    .long 0
    .long 0
stringtable_t:
    .long true_value
    .long 0
    .long 0
stringtable_eq:
    .long eq_value
    .long stringtable_car
    .long stringtable_progn
stringtable_car:
    .long car_value
    .long 0
    .long 0
stringtable_progn:
    .long progn_value
    .long 0
    .long 0
stringtable_eval:
    .long eval_value
    .long 0
    .long 0
stringtable_cdr:
    .long cdr_value
    .long 0
    .long stringtable_while
stringtable_while:
    .long while_value
    .long 0
    .long 0
stringtable_ast:
    .long ast_value
    .long 0
    .long 0
stringtable_define:
    .long define_value
    .long stringtable_plus
    .long stringtable_lambdaast
stringtable_plus:
    .long plus_value
    .long 0
    .long 0
stringtable_lambdaast:
    .long lambdaast_value
    .long 0
    .long 0
stringtable_list:
    .long list_value
    .long stringtable_lt
    .long 0
stringtable_lt:
    .long lt_value
    .long 0
    .long 0
stringtable_print:
    .long print_value
    .long stringtable_minus
    .long 0
stringtable_minus:
    .long minus_value
    .long 0
    .long 0
stringtable_quote:
    .long quote_value
    .long stringtable_gt
    .long 0
stringtable_gt:
    .long gt_value
    .long 0
    .long 0
stringtable_if:
    .long if_value
    .long stringtable_slash
    .long 0
stringtable_slash:
    .long slash_value
    .long 0
    .long 0

nil_value:
    .long 4
    .long 0
